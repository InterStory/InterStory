name: github-action-workflow
on:
  push:
    branches: [ "feat/docker" ]
  pull_request:
    branches: [ "feat/docker" ]
  workflow_dispatch:

env:
  S3_BUCKET_NAME: interstory-deploy
  AWS_REGION: ap-northeast-2
  CODEDEPLOY_NAME: github-actions
  CODEDEPLOY_GROUP: interstory-github-actions-group
  PROJECT_NAME: interstory

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Gradle 캐시 추가
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-     

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 배포 파일 준비
      - name: Make zip file
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp scripts/* deploy/
          cd deploy && zip -r ../$GITHUB_SHA.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # S3 업로드 및 CodeDeploy 배포
      - name: Upload to S3 and Deploy
        run: |
          aws s3 cp --region ${{ env.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_NAME }} \
            --deployment-group-name ${{ env.CODEDEPLOY_GROUP }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip